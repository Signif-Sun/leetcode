#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Solution {
public:
	string longestCommonPrefix(vector<string>& strs) {
		string prefix = "";
    //if the str's lenth is one,the longest common profix is it's own 
		for (int idx = 0; strs.size()>0; prefix += strs[0][idx], idx++)
			for (int i = 0; i<strs.size(); i++)
      //if index i more than size of strs or the prior is NOT equal the current return eh profix
				if (idx >= strs[i].size() || (i > 0 && strs[i][idx] != strs[i - 1][idx]))
					return prefix;
		return prefix;
	}
};


class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) {
        int n = strs.size();
        string res;
        if (n==0)
            return res;
        int minLen = strs[0].length();
        for (int i=0; i<n; ++i) {
            if (strs[i].length() < minLen)
                minLen = strs[i].length();
        }
        for (int i =0; i<minLen;++i) {
            for (int j=1; j<n; ++j)  {
                if (strs[j].length() < i+1 || strs[j-1][i]!=strs[j][i])
                    return res;
            }
            res.push_back(strs[0][i]);
        }
        return res;
    }
};
